package org.amelia.dsl.examples.ubuntu.containers.frascati

import org.amelia.dsl.lib.descriptors.Host

depends on org.amelia.dsl.examples.ubuntu.containers.DockerCE

/*
 * Runs FraSCAti 1.4 on docker and compiles and executes the helloworld-rmi
 * project from the FraSCAti distribution.
 *
 * @author Miguel Jimenez (miguel@uvic.ca)
 * @date 2017-09-03
 */
subsystem HelloworldRMI {

	/*
	 * The host in which the container is executed.
	 */
	param Host host

	/*
	 * The FraSCAti 1.4 (Docker) image.
	 */
	var String image = 'jachinte/frascati-1.4'

	/*
	 * Path to the helloworld-rmi project.
	 */
	var String path = '/opt/frascati-runtime-1.4/examples/helloworld-rmi/'

	/*
	 * The scripts to compile and run the example.
	 */
	var String serverScript = '"
		frascati compile server/src server;
		frascati run helloworld-rmi-server --libpath server.jar
	"'
	var String clientScript = '"
		sed -i \\"s/localhost/server/g\\" client/src/main/resources/helloworld-rmi-client.composite;
		frascati compile client/src client;
		frascati run helloworld-rmi-client --libpath client.jar -s r -m run
	"'

	on host {
		init:
			cmd 'docker pull «image»'... => [ withoutTimeout ]
			cmd 'docker network create --driver bridge helloworld'

		cleanup: client;
			cmd 'docker kill server'
			cmd 'docker network rm helloworld'
			cmd 'docker rmi «image»'
	}

	on host {
		server: init;
			cmd 'docker run --rm -d --net=helloworld --name=server -p 0.0.0.0:1099:1099
				--workdir=«path» «image» /bin/bash -c «serverScript»'
			cmd 'until (docker logs server | grep "Press Ctrl+C to quit"); do : ; done'

		client: server;
			(cmd 'docker run --rm --net=helloworld --name=client
				--workdir=«path» «image» /bin/bash -c «clientScript»').fetch [ output | println(output) ]
	}
}
