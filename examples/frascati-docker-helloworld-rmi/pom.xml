<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>com.github.unicesi</groupId>
		<artifactId>org.amelia.dsl.examples</artifactId>
		<version>0.13.13-SNAPSHOT</version>
	</parent>
	<artifactId>org.amelia.dsl.examples.docker.frascati</artifactId>

	<name>Example: FraSCAti helloworld-rmi (Docker)</name>
	<description>
		This example runs FraSCAti 1.4 on docker and compiles and executes the 
		helloworld-rmi project from the FraSCAti distribution.
	</description>

	<properties>
		<mainClass>org.amelia.dsl.examples.ubuntu.containers.frascati.Deployment</mainClass>
		<host>localhost</host>
		<privileged-user>root</privileged-user>
		<unprivileged-user>${user.name}</unprivileged-user>
	</properties>

	<dependencies>
		<dependency>
			<groupId>com.github.unicesi</groupId>
			<artifactId>org.amelia.dsl.examples.docker</artifactId>
			<version>${project.version}</version>
		</dependency>
	</dependencies>

	<build>
		<plugins>
			<plugin>
				<groupId>org.eclipse.xtext</groupId>
				<artifactId>xtext-maven-plugin</artifactId>
				<version>${xtextVersion}</version>
				<executions>
					<execution>
						<goals>
							<goal>generate</goal>
						</goals>
					</execution>
				</executions>
				<configuration>
					<javaSourceRoots>
						<javaSourceRoot>${java.source.directory}</javaSourceRoot>
					</javaSourceRoots>
					<sourceRoots>
						<sourceRoot>${amelia.source.directory}</sourceRoot>
					</sourceRoots>
					<languages>
						<language>
							<setup>org.amelia.dsl.AmeliaStandaloneSetup</setup>
							<javaSupport>true</javaSupport>
							<outputConfigurations>
								<outputConfiguration>
									<outputDirectory>${amelia.output.directory}</outputDirectory>
								</outputConfiguration>
							</outputConfigurations>
						</language>
					</languages>
				</configuration>
				<dependencies>
					<dependency>
						<artifactId>org.amelia.dsl</artifactId>
						<groupId>com.github.unicesi</groupId>
						<version>${project.version}</version>
					</dependency>
					<dependency>
						<groupId>com.github.unicesi</groupId>
						<artifactId>org.amelia.dsl.examples.docker</artifactId>
						<version>${project.version}</version>
					</dependency>
				</dependencies>
			</plugin>
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>exec-maven-plugin</artifactId>
				<version>1.6.0</version>
				<executions>
					<execution>
						<goals>
							<goal>java</goal>
						</goals>
					</execution>
				</executions>
				<configuration>
					<mainClass>${mainClass}</mainClass>
					<systemProperties>
						<systemProperty>
							<key>host</key>
							<value>${host}</value>
						</systemProperty>
						<systemProperty>
							<key>privileged-user</key>
							<value>${privileged-user}</value>
						</systemProperty>
						<systemProperty>
							<key>unprivileged-user</key>
							<value>${unprivileged-user}</value>
						</systemProperty>
						<systemProperty>
							<key>amelia.execution_timeout</key>
							<value>30000</value>
						</systemProperty>
					</systemProperties>
				</configuration>
			</plugin>
		</plugins>
		<pluginManagement>
			<plugins>
				<!--This plugin's configuration is used to store Eclipse m2e settings only. It has no influence on the Maven build itself.-->
				<plugin>
					<groupId>org.eclipse.m2e</groupId>
					<artifactId>lifecycle-mapping</artifactId>
					<version>1.0.0</version>
					<configuration>
						<lifecycleMappingMetadata>
							<pluginExecutions>
								<pluginExecution>
									<pluginExecutionFilter>
										<groupId>
											org.eclipse.xtext
										</groupId>
										<artifactId>
											xtext-maven-plugin
										</artifactId>
										<versionRange>
											[2.12.0,)
										</versionRange>
										<goals>
											<goal>generate</goal>
										</goals>
									</pluginExecutionFilter>
									<action>
										<ignore></ignore>
									</action>
								</pluginExecution>
							</pluginExecutions>
						</lifecycleMappingMetadata>
					</configuration>
				</plugin>
			</plugins>
		</pluginManagement>
	</build>
</project>
