package org.amelia.dsl.examples.ubuntu.containers

import org.amelia.dsl.examples.ubuntu.Arch
import java.util.concurrent.atomic.AtomicBoolean
import static org.amelia.dsl.examples.Util.raiseif
import static extension org.amelia.dsl.examples.Util.warn

includes org.amelia.dsl.examples.ubuntu.HTTPS

/*
 * Installs Docker Community Edition according to the
 * <a href="https://docs.docker.com/engine/installation/linux/docker-ce/ubuntu">
 * official documentation</a>.
 * <p>
 * If Docker is already installed and the given version is different, it is
 * upgraded/downgraded.
 *
 * @author Miguel Jimenez (miguel@uvic.ca)
 * @date 2017-08-24
 */
subsystem DockerCE {

	/*
	 * The target architecture.
	 */
	param Arch arch

	/*
	 * The docker version to install. e.g., 17.07.0
	 */
	param String version

	/*
	 * The user that shall be added to the docker group (optional).
	 */
	param String user

	/*
	 * Whether Docker is already installed or not and should be
	 * upgraded/downgraded.
	 */
	var AtomicBoolean install = new AtomicBoolean
	var AtomicBoolean replace = new AtomicBoolean

	/*
	 * Docker's GPG key.
	 */
	var String gpgKey = '9DC8 5822 9FC7 DD38 854A  E2D8 8D81 803C 0EBF CD88'

	on hosts {
		init:
			(cmd 'docker --version')
				.fetch [ replace.set(!it.contains(version)) ]
				.fallback [ install.set(true) ]
	}

	on hosts? install || replace {
		verification: init, org.amelia.dsl.examples.ubuntu.HTTPS.installation;
			cmd 'curl -fsSL https://download.docker.com/linux/ubuntu/gpg | apt-key add -'
			(cmd 'apt-key fingerprint 0EBFCD88')
				.fetch [ raiseif(!it.contains(gpgKey), 'GPG key cannot be trusted!\n«it»') ]

		repository: verification;
			cmd 'add-apt-repository "deb [arch=«arch»]
					https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable"'

		installation: repository;
			(cmd 'apt-get update'... => [ withoutTimeout ])
				.warn ('Updating the package lists may take several minutes')
			cmd 'apt-get install -y --allow-downgrades docker-ce=«version»*'... => [ withoutTimeout ]

		configuration? user !== null: installation;
			cmd 'usermod -aG docker «user»'
	}
}
